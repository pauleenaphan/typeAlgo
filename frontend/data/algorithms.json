[
    {
        "name": "binarySearch",
        "description": "Binary Search Algorithm is a searching algorithm used in a sorted array by repeatedly dividing the search interval in half.",
        "cppCode": "int binarySearch(int arr[], int low, int high, int x){\n[oneTab]while(low <= high){\n[twoTab]int mid = low + (high - low) / 2;\n[twoTab]if(arr[mid] == x){\n[threeTab]return mid;\n[twoTab]}\n[twoTab]if(arr[mid] < x){\n[threeTab]low = mid + 1;\n[twoTab]}\n[twoTab]else{\n[threeTab]high = mid - 1;\n[twoTab]}\n    }\n    return -1;\n}",
        "javaCode": "int binarySearch(int arr[], int x){\n    int low = 0, high = arr.length - 1;\n    while (low <= high){\n        int mid = low + (high - low) / 2;\n        if(arr[mid] == x){\n            return mid;\n        }\n        if(arr[mid] < x){\n            low = mid + 1;\n        }\n        else{\n            high = mid - 1;\n        }\n    }\n    return -1;\n}",
        "pythonCode": "def binarySearch(arr, low, high, x):\n    while low <= high:\n        mid = low + (high - low) // 2\n        if arr[mid] == x:\n            return mid\n        elif arr[mid] < x:\n            low = mid + 1\n        else:\n            high = mid - 1\n    return -1",
        "ref": "https://www.geeksforgeeks.org/binary-search/",
        "type": "searching and sorting"
    }
]